{"pageProps":{"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      blockquote: \"blockquote\",\n      p: \"p\",\n      h1: \"h1\",\n      a: \"a\",\n      span: \"span\",\n      ul: \"ul\",\n      li: \"li\",\n      strong: \"strong\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"I couldn’t run it correctly. According to search, I found the reason and the fix method. So how can we fix it?\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Due to unknown case, the maintainer don’t update it with a long time. So the server get some problems.\"\n      }), \"\\n\", _jsxs(_components.h1, {\n        id: \"start\",\n        children: [_jsx(_components.a, {\n          \"aria-hidden\": \"true\",\n          tabIndex: \"-1\",\n          href: \"#start\",\n          children: _jsx(_components.span, {\n            className: \"icon icon-link\"\n          })\n        }), \"Start\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We can archieve it on Heroku clound!\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [\"Log in \", _jsx(_components.a, {\n              href: \"https://www.heroku.com\",\n              children: \"Heroku\"\n            })]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [\"Fork the \", _jsx(_components.a, {\n              href: \"https://github.com/imsun/gh-oauth-server\",\n              children: \"server sources\"\n            })]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsx(_components.p, {\n            children: \"Edit the package.json. Add “heroku\\\": \\\"NODE_ENV=production node server” in “scripts”\"\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [\"Create Procfile, add web: npm run heroku, then create \", _jsx(_components.strong, {\n              children: \"app.json\"\n            }), \", add “name\\\": \\\"gh-oauth-server”\"]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [\"Open \", _jsx(_components.a, {\n              href: \"https://heroku.com/deploy?template=URL\",\n              children: \"heroku\"\n            }), \", where URL is changed to a fork address e.g. github.com/USERNAME/gh-oauth-server\"]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"\\n\", _jsx(_components.p, {\n            children: \"Create the software. Change the original gh-oauth.imsun.net to “YourAppName”.herokuapp.com\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Enjoy~\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontMatter":{"wordCount":111,"slug":"gitment","title":"Gitment fix record","date":"2021-08-25","readingTime":"1 min read","description":"A record about fixing gitment","tags":["gitment"]}},"__N_SSG":true}